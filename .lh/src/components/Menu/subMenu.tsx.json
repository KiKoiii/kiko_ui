{
    "sourceFile": "src/components/Menu/subMenu.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1663247458700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1663247491859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n     children?:any;\r\n }\r\n \r\n const SubMenu: React.FC<SubMenuProps> = (props) => {\r\n+    //子组件打开显示\r\n     const [menuOpen,setOpen] =useState(false)\r\n     const { index, title, children, className } = props\r\n     const context = useContext(MenuContext)\r\n     const classes = classNames('menu-item submenu-item', className, {\r\n"
                },
                {
                    "date": 1663247821863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: kiko\r\n  * @Date: 2022-09-15 18:17:03\r\n  * @LastEditors: kiko\r\n- * @LastEditTime: 2022-09-15 21:10:58\r\n+ * @LastEditTime: 2022-09-15 21:17:01\r\n  */\r\n import React,{useContext,useState} from 'react'\r\n import classNames from 'classnames'\r\n import { MenuContext } from './menu'\r\n@@ -33,8 +33,11 @@\n         setOpen(!menuOpen)\r\n \r\n       }\r\n       const renderChildren=()=>{\r\n+        const subMenuClasses=classNames('kiko-submenu',{\r\n+            'menu-opened':menuOpen\r\n+        })\r\n         const childrenComponent=React.Children.map(children,(child,index)=>{\r\n             const childElement =child as React.FunctionComponentElement<MenuItemProps>\r\n             if(childElement.type.displayName==='MenuItem'){\r\n                 return childElement\r\n@@ -42,9 +45,9 @@\n                 console.error(\"这不是一个菜单的子组件\")\r\n             }\r\n         })\r\n         return(\r\n-            <ul className='kiko-submenu'>\r\n+            <ul className={subMenuClasses}>\r\n                 {childrenComponent}\r\n             </ul>\r\n         )\r\n       }\r\n"
                },
                {
                    "date": 1663247896005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: kiko\r\n  * @Date: 2022-09-15 18:17:03\r\n  * @LastEditors: kiko\r\n- * @LastEditTime: 2022-09-15 21:17:01\r\n+ * @LastEditTime: 2022-09-15 21:18:15\r\n  */\r\n import React,{useContext,useState} from 'react'\r\n import classNames from 'classnames'\r\n import { MenuContext } from './menu'\r\n@@ -27,9 +27,9 @@\n     const context = useContext(MenuContext)\r\n     const classes = classNames('menu-item submenu-item', className, {\r\n         'is-active': context.index === index, \r\n       })\r\n-      const handleClick=(e:React.MouseEvent)=>{\r\n+      const =(e:React.MouseEvent)=>{\r\n         e.preventDefault()\r\n         setOpen(!menuOpen)\r\n \r\n       }\r\n@@ -52,9 +52,9 @@\n         )\r\n       }\r\n       return(\r\n         <li key={index} className={classes}>\r\n-            <div className='submenu-title'>\r\n+            <div className='submenu-title' onClick={handleClick}>\r\n                 {title}\r\n             </div>\r\n             {renderChildren()}\r\n         </li>\r\n"
                },
                {
                    "date": 1663247937967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: kiko\r\n  * @Date: 2022-09-15 18:17:03\r\n  * @LastEditors: kiko\r\n- * @LastEditTime: 2022-09-15 21:18:15\r\n+ * @LastEditTime: 2022-09-15 21:17:01\r\n  */\r\n import React,{useContext,useState} from 'react'\r\n import classNames from 'classnames'\r\n import { MenuContext } from './menu'\r\n@@ -27,9 +27,9 @@\n     const context = useContext(MenuContext)\r\n     const classes = classNames('menu-item submenu-item', className, {\r\n         'is-active': context.index === index, \r\n       })\r\n-      const =(e:React.MouseEvent)=>{\r\n+      const handleClick=(e:React.MouseEvent)=>{\r\n         e.preventDefault()\r\n         setOpen(!menuOpen)\r\n \r\n       }\r\n"
                },
                {
                    "date": 1663250582705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: kiko\r\n  * @Date: 2022-09-15 18:17:03\r\n  * @LastEditors: kiko\r\n- * @LastEditTime: 2022-09-15 21:17:01\r\n+ * @LastEditTime: 2022-09-15 22:03:02\r\n  */\r\n import React,{useContext,useState} from 'react'\r\n import classNames from 'classnames'\r\n import { MenuContext } from './menu'\r\n@@ -32,8 +32,11 @@\n         e.preventDefault()\r\n         setOpen(!menuOpen)\r\n \r\n       }\r\n+      const handleMouse=(e:React.MouseEvent,toggle:boolean/**打开还是关闭 */)=>{\r\n+\r\n+      }\r\n       const renderChildren=()=>{\r\n         const subMenuClasses=classNames('kiko-submenu',{\r\n             'menu-opened':menuOpen\r\n         })\r\n"
                },
                {
                    "date": 1663256151102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,15 @@\n  * @version: \r\n  * @Author: kiko\r\n  * @Date: 2022-09-15 18:17:03\r\n  * @LastEditors: kiko\r\n- * @LastEditTime: 2022-09-15 22:03:02\r\n+ * @LastEditTime: 2022-09-15 23:35:50\r\n  */\r\n import React,{useContext,useState} from 'react'\r\n import classNames from 'classnames'\r\n import { MenuContext } from './menu'\r\n import { MenuItemProps } from './menuItem';\r\n+import { clearTimeout } from 'timers';\r\n \r\n export interface SubMenuProps {\r\n     index?: string;\r\n     //下拉菜单选项的文字 \r\n@@ -32,10 +33,15 @@\n         e.preventDefault()\r\n         setOpen(!menuOpen)\r\n \r\n       }\r\n+      let timer:any;\r\n       const handleMouse=(e:React.MouseEvent,toggle:boolean/**打开还是关闭 */)=>{\r\n-\r\n+        clearTimeout(timer)\r\n+        e.preventDefault()\r\n+        timer=setTimeout(() => {\r\n+            setOpen(toggle)\r\n+        },200 );\r\n       }\r\n       const renderChildren=()=>{\r\n         const subMenuClasses=classNames('kiko-submenu',{\r\n             'menu-opened':menuOpen\r\n"
                }
            ],
            "date": 1663247458700,
            "name": "Commit-0",
            "content": "/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: kiko\r\n * @Date: 2022-09-15 18:17:03\r\n * @LastEditors: kiko\r\n * @LastEditTime: 2022-09-15 21:10:58\r\n */\r\nimport React,{useContext,useState} from 'react'\r\nimport classNames from 'classnames'\r\nimport { MenuContext } from './menu'\r\nimport { MenuItemProps } from './menuItem';\r\n\r\nexport interface SubMenuProps {\r\n    index?: string;\r\n    //下拉菜单选项的文字 \r\n    title: string;\r\n    // 下拉菜单选型的扩展类名 \r\n    className?: string;\r\n    children?:any;\r\n}\r\n\r\nconst SubMenu: React.FC<SubMenuProps> = (props) => {\r\n    const [menuOpen,setOpen] =useState(false)\r\n    const { index, title, children, className } = props\r\n    const context = useContext(MenuContext)\r\n    const classes = classNames('menu-item submenu-item', className, {\r\n        'is-active': context.index === index, \r\n      })\r\n      const handleClick=(e:React.MouseEvent)=>{\r\n        e.preventDefault()\r\n        setOpen(!menuOpen)\r\n\r\n      }\r\n      const renderChildren=()=>{\r\n        const childrenComponent=React.Children.map(children,(child,index)=>{\r\n            const childElement =child as React.FunctionComponentElement<MenuItemProps>\r\n            if(childElement.type.displayName==='MenuItem'){\r\n                return childElement\r\n            }else{\r\n                console.error(\"这不是一个菜单的子组件\")\r\n            }\r\n        })\r\n        return(\r\n            <ul className='kiko-submenu'>\r\n                {childrenComponent}\r\n            </ul>\r\n        )\r\n      }\r\n      return(\r\n        <li key={index} className={classes}>\r\n            <div className='submenu-title'>\r\n                {title}\r\n            </div>\r\n            {renderChildren()}\r\n        </li>\r\n      )\r\n    \r\n}\r\nSubMenu.displayName='SubMenu'\r\nexport default SubMenu"
        }
    ]
}