{
    "sourceFile": "src/components/Button/button.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1663656047418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1663656140165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,14 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 14:40:47\n+ * @LastEditTime: 2022-09-20 14:42:19\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n-export type ButtonSize  = 'lg' | 'sm'\n+export type ButtonSize = 'lg' | 'sm'\n export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n // export enum ButtonSize {\n //   Large = 'lg',\n //   Small = 'sm'\n"
                },
                {
                    "date": 1663656191909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,13 +39,8 @@\n type AnchorButtonProps = BaseButtonProps & AnchorHTMLAttributes<HTMLElement>\n export type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n /**\n  * 页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\n- * ### 引用方法\n- *\n- * ~~~js\n- * import { Button } from 'vikingship-ui'\n- * ~~~\n  */\n export const Button: FC<ButtonProps> = (props) => {\n   const { btnType, disabled, size, children, className, href, ...restProps } = props\n   // btn, btn-lg, btn-primary\n"
                },
                {
                    "date": 1663656357573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 14:42:19\n+ * @LastEditTime: 2022-09-20 14:45:57\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n@@ -74,8 +74,8 @@\n }\n \n Button.defaultProps = {\n   disabled: false,\n-  btnType: 'default'\n+  btnType: ButtonType.Default\n }\n \n export default Button;\n"
                },
                {
                    "date": 1663656414412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,21 +8,21 @@\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n-export type ButtonSize = 'lg' | 'sm'\n-export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n-// export enum ButtonSize {\n-//   Large = 'lg',\n-//   Small = 'sm'\n-// }\n+// export type ButtonSize = 'lg' | 'sm'\n+// export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n+export enum ButtonSize {\n+  Large = 'lg',\n+  Small = 'sm'\n+}\n \n-// export enum ButtonType {\n-//   Primary = 'primary',\n-//   Default = 'default',\n-//   Danger = 'danger',\n-//   Link = 'link',\n-// }\n+export enum ButtonType {\n+  Primary = 'primary',\n+  Default = 'default',\n+  Danger = 'danger',\n+  Link = 'link',\n+}\n \n interface BaseButtonProps {\n   className?: string;\n   /**设置 Button 的禁用 */\n"
                },
                {
                    "date": 1663656505577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,26 +3,26 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 14:45:57\n+ * @LastEditTime: 2022-09-20 14:48:25\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n-// export type ButtonSize = 'lg' | 'sm'\n-// export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n-export enum ButtonSize {\n-  Large = 'lg',\n-  Small = 'sm'\n-}\n+export type ButtonSize = 'lg' | 'sm'\n+export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n+// export enum ButtonSize {\n+//   Large = 'lg',\n+//   Small = 'sm'\n+// }\n \n-export enum ButtonType {\n-  Primary = 'primary',\n-  Default = 'default',\n-  Danger = 'danger',\n-  Link = 'link',\n-}\n+// export enum ButtonType {\n+//   Primary = 'primary',\n+//   Default = 'default',\n+//   Danger = 'danger',\n+//   Link = 'link',\n+// }\n \n interface BaseButtonProps {\n   className?: string;\n   /**设置 Button 的禁用 */\n"
                },
                {
                    "date": 1663656757862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 14:48:25\n+ * @LastEditTime: 2022-09-20 14:52:37\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n@@ -74,8 +74,8 @@\n }\n \n Button.defaultProps = {\n   disabled: false,\n-  btnType: ButtonType.Default\n+  btnType: 'default'\n }\n \n export default Button;\n"
                },
                {
                    "date": 1663657049211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 14:52:37\n+ * @LastEditTime: 2022-09-20 14:57:28\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n@@ -22,9 +22,9 @@\n //   Danger = 'danger',\n //   Link = 'link',\n // }\n \n-interface BaseButtonProps {\n+export interface BaseButtonProps {\n   className?: string;\n   /**设置 Button 的禁用 */\n   disabled?: boolean;\n   /**设置 Button 的尺寸 */\n"
                },
                {
                    "date": 1663657077070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n //   Danger = 'danger',\n //   Link = 'link',\n // }\n \n-export interface BaseButtonProps {\n+interface BaseButtonProps {\n   className?: string;\n   /**设置 Button 的禁用 */\n   disabled?: boolean;\n   /**设置 Button 的尺寸 */\n"
                },
                {
                    "date": 1663657477972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 14:57:28\n+ * @LastEditTime: 2022-09-20 15:04:37\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n"
                },
                {
                    "date": 1663657505121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,21 +8,21 @@\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n-export type ButtonSize = 'lg' | 'sm'\n-export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n-// export enum ButtonSize {\n-//   Large = 'lg',\n-//   Small = 'sm'\n-// }\n+// export type ButtonSize = 'lg' | 'sm'\n+// export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n+export enum ButtonSize {\n+  Large = 'lg',\n+  Small = 'sm'\n+}\n \n-// export enum ButtonType {\n-//   Primary = 'primary',\n-//   Default = 'default',\n-//   Danger = 'danger',\n-//   Link = 'link',\n-// }\n+export enum ButtonType {\n+  Primary = 'primary',\n+  Default = 'default',\n+  Danger = 'danger',\n+  Link = 'link',\n+}\n \n interface BaseButtonProps {\n   className?: string;\n   /**设置 Button 的禁用 */\n"
                },
                {
                    "date": 1663657669587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,26 +3,26 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 15:04:37\n+ * @LastEditTime: 2022-09-20 15:07:49\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n-// export type ButtonSize = 'lg' | 'sm'\n-// export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n-export enum ButtonSize {\n-  Large = 'lg',\n-  Small = 'sm'\n-}\n+export type ButtonSize = 'lg' | 'sm'\n+export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n+// export enum ButtonSize {\n+//   Large = 'lg',\n+//   Small = 'sm'\n+// }\n \n-export enum ButtonType {\n-  Primary = 'primary',\n-  Default = 'default',\n-  Danger = 'danger',\n-  Link = 'link',\n-}\n+// export enum ButtonType {\n+//   Primary = 'primary',\n+//   Default = 'default',\n+//   Danger = 'danger',\n+//   Link = 'link',\n+// }\n \n interface BaseButtonProps {\n   className?: string;\n   /**设置 Button 的禁用 */\n"
                },
                {
                    "date": 1663658231875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,19 +3,17 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 15:07:49\n+ * @LastEditTime: 2022-09-20 15:17:11\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n-export type ButtonSize = 'lg' | 'sm'\n-export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n-// export enum ButtonSize {\n-//   Large = 'lg',\n-//   Small = 'sm'\n-// }\n+export abstract class ButtonSize {\n+  Large = 'lg';\n+  Small = 'sm'\n+}\n \n // export enum ButtonType {\n //   Primary = 'primary',\n //   Default = 'default',\n"
                },
                {
                    "date": 1663658295943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,17 +3,19 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 15:17:11\n+ * @LastEditTime: 2022-09-20 15:18:15\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n-export abstract class ButtonSize {\n-  Large = 'lg';\n-  Small = 'sm'\n-}\n+export type ButtonSize = 'lg' | 'sm'\n+export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n+// export enum ButtonSize {\n+//   Large = 'lg',\n+//   Small = 'sm'\n+// }\n \n // export enum ButtonType {\n //   Primary = 'primary',\n //   Default = 'default',\n"
                },
                {
                    "date": 1663660564092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 15:18:15\n+ * @LastEditTime: 2022-09-20 15:56:03\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n@@ -72,10 +72,12 @@\n     )\n   }\n }\n \n+// 默认属性\n Button.defaultProps = {\n   disabled: false,\n-  btnType: 'default'\n-}\n+  buttonType: 'default',\n+  buttonSize: 'lg',\n+};\n \n export default Button;\n"
                },
                {
                    "date": 1663660620254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,79 +5,100 @@\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n  * @LastEditTime: 2022-09-20 15:56:03\n  */\n-import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n-import classNames from 'classnames'\n+import React, { useContext, FC, ButtonHTMLAttributes, AnchorHTMLAttributes, ReactChild } from 'react';\n+import classNames from 'classnames';\n+// import { ConfigContext } from '../ConfigProvider';\n+// import './index.less';\n+import './index.scss';\n \n-export type ButtonSize = 'lg' | 'sm'\n-export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n-// export enum ButtonSize {\n-//   Large = 'lg',\n-//   Small = 'sm'\n-// }\n+// 按钮大小\n+// enum buttonSize {\n+//     Large = 'lg',\n+//     Middle = 'ml',\n+//     Small = 'sm',\n+// };\n+export type buttonSize = 'lg' | 'ml' | 'sm';\n \n-// export enum ButtonType {\n-//   Primary = 'primary',\n-//   Default = 'default',\n-//   Danger = 'danger',\n-//   Link = 'link',\n-// }\n+// 按钮类型\n+// enum buttonType {\n+//     Primary = 'primary',\n+//     Default = 'default',\n+//     Danger = 'danger',\n+//     Link = 'link',\n+// };\n+export type buttonType = 'primary' | 'default' | 'danger' | 'link';\n \n-interface BaseButtonProps {\n-  className?: string;\n-  /**设置 Button 的禁用 */\n-  disabled?: boolean;\n-  /**设置 Button 的尺寸 */\n-  size?: ButtonSize;\n-  /**设置 Button 的类型 */\n-  btnType?: ButtonType;\n-  children: React.ReactNode;\n-  href?: string;\n-}\n+// 定义组件属性\n+export interface BaseButtonProps {\n+    className?: string;\n+    /**设置 Button 是否禁用*/\n+    disabled?: boolean;\n+    /**设置 Button 大小*/\n+    buttonSize?: buttonSize;\n+    /**设置 Button 类型*/\n+    buttonType?: buttonType;\n+    children: ReactChild;\n+    href?: string;\n+};\n \n+// 扩展按钮属性，如 onClick...\n+// & ： typeScript 中联合类型，表示两种类型都要。 | 或：两个取其中一个\n+// Partial<> : typeScript 中提供，把属性变成可选的\n type NativeButtonProps = BaseButtonProps & ButtonHTMLAttributes<HTMLElement>\n type AnchorButtonProps = BaseButtonProps & AnchorHTMLAttributes<HTMLElement>\n-export type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n+type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n+\n /**\n- * 页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\n+ * 这是我们的一个Button组件\n  */\n export const Button: FC<ButtonProps> = (props) => {\n-  const { btnType, disabled, size, children, className, href, ...restProps } = props\n-  // btn, btn-lg, btn-primary\n-  const classes = classNames('btn', className, {\n-    [`btn-${btnType}`]: btnType,\n-    [`btn-${size}`]: size,\n-    'disabled': (btnType === 'link') && disabled\n-  })\n+    const {\n+        className,\n+        disabled,\n+        buttonSize,\n+        buttonType,\n+        children,\n+        href,\n+        ...restProps\n+    } = props;\n \n-  if (btnType === 'link' && href) {\n+    const classes = classNames('vik-btn', {\n+        [`vik-btn-${buttonType}`]: !!buttonType,\n+        [`vik-btn-${buttonSize}`]: !!buttonSize,\n+        'vik-disabled': (buttonType === 'link') && disabled\n+    }, className);\n+\n+    if (buttonType === 'link' && href) {\n+        return (\n+            <a \n+                className={classes}\n+                href={href}\n+                {...restProps}\n+            >\n+                {children}\n+            </a>\n+        );\n+    }\n+\n+    // const config = useContext(ConfigContext);\n+\n     return (\n-      <a\n-        className={classes}\n-        href={href}\n-        {...restProps}\n-      >\n-        {children}\n-      </a>\n-    )\n-  } else {\n-    return (\n-      <button\n-        className={classes}\n-        disabled={disabled}\n-        {...restProps}\n-      >\n-        {children}\n-      </button>\n-    )\n-  }\n-}\n+        <button \n+            className={classes}\n+            disabled={disabled}\n+            {...restProps}\n+        >\n+            {children}\n+        </button>\n+    );\n+};\n \n // 默认属性\n Button.defaultProps = {\n-  disabled: false,\n-  buttonType: 'default',\n-  buttonSize: 'lg',\n+    disabled: false,\n+    buttonType: 'default',\n+    buttonSize: 'lg',\n };\n \n export default Button;\n"
                },
                {
                    "date": 1663660647371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,11 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 15:56:03\n+ * @LastEditTime: 2022-09-20 15:57:27\n  */\n-import React, { useContext, FC, ButtonHTMLAttributes, AnchorHTMLAttributes, ReactChild } from 'react';\n+import React, { useContext, FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react';\n import classNames from 'classnames';\n // import { ConfigContext } from '../ConfigProvider';\n // import './index.less';\n import './index.scss';\n"
                },
                {
                    "date": 1663660692515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     /**设置 Button 大小*/\n     buttonSize?: buttonSize;\n     /**设置 Button 类型*/\n     buttonType?: buttonType;\n-    children: ReactChild;\n+    children: any;\n     href?: string;\n };\n \n // 扩展按钮属性，如 onClick...\n"
                },
                {
                    "date": 1663660782992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,11 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 15:57:27\n+ * @LastEditTime: 2022-09-20 15:59:42\n  */\n-import React, { useContext, FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react';\n+import React, { useContext, FC, ButtonHTMLAttributes, AnchorHTMLAttributes,  ReactNode } from 'react';\n import classNames from 'classnames';\n // import { ConfigContext } from '../ConfigProvider';\n // import './index.less';\n import './index.scss';\n@@ -37,9 +37,9 @@\n     /**设置 Button 大小*/\n     buttonSize?: buttonSize;\n     /**设置 Button 类型*/\n     buttonType?: buttonType;\n-    children: any;\n+    children: ReactNode;\n     href?: string;\n };\n \n // 扩展按钮属性，如 onClick...\n"
                },
                {
                    "date": 1663660906629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,12 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 15:59:42\n+ * @LastEditTime: 2022-09-20 16:01:46\n  */\n import React, { useContext, FC, ButtonHTMLAttributes, AnchorHTMLAttributes,  ReactNode } from 'react';\n import classNames from 'classnames';\n-// import { ConfigContext } from '../ConfigProvider';\n-// import './index.less';\n import './index.scss';\n \n // 按钮大小\n // enum buttonSize {\n@@ -62,12 +60,12 @@\n         href,\n         ...restProps\n     } = props;\n \n-    const classes = classNames('vik-btn', {\n-        [`vik-btn-${buttonType}`]: !!buttonType,\n-        [`vik-btn-${buttonSize}`]: !!buttonSize,\n-        'vik-disabled': (buttonType === 'link') && disabled\n+    const classes = classNames('btn', {\n+        [`btn-${buttonType}`]: !!buttonType,\n+        [`btn-${buttonSize}`]: !!buttonSize,\n+        'disabled': (buttonType === 'link') && disabled\n     }, className);\n \n     if (buttonType === 'link' && href) {\n         return (\n"
                },
                {
                    "date": 1663660949769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,10 +78,8 @@\n             </a>\n         );\n     }\n \n-    // const config = useContext(ConfigContext);\n-\n     return (\n         <button \n             className={classes}\n             disabled={disabled}\n"
                },
                {
                    "date": 1663661380070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,98 +3,80 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 16:01:46\n+ * @LastEditTime: 2022-09-20 16:09:39\n  */\n-import React, { useContext, FC, ButtonHTMLAttributes, AnchorHTMLAttributes,  ReactNode } from 'react';\n-import classNames from 'classnames';\n-import './index.scss';\n+import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n+import classNames from 'classnames'\n \n-// 按钮大小\n-// enum buttonSize {\n-//     Large = 'lg',\n-//     Middle = 'ml',\n-//     Small = 'sm',\n-// };\n-export type buttonSize = 'lg' | 'ml' | 'sm';\n+export type ButtonSize = 'lg' | 'sm'\n+export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n+// export enum ButtonSize {\n+//   Large = 'lg',\n+//   Small = 'sm'\n+// }\n \n-// 按钮类型\n-// enum buttonType {\n-//     Primary = 'primary',\n-//     Default = 'default',\n-//     Danger = 'danger',\n-//     Link = 'link',\n-// };\n-export type buttonType = 'primary' | 'default' | 'danger' | 'link';\n+// export enum ButtonType {\n+//   Primary = 'primary',\n+//   Default = 'default',\n+//   Danger = 'danger',\n+//   Link = 'link',\n+// }\n \n-// 定义组件属性\n-export interface BaseButtonProps {\n-    className?: string;\n-    /**设置 Button 是否禁用*/\n-    disabled?: boolean;\n-    /**设置 Button 大小*/\n-    buttonSize?: buttonSize;\n-    /**设置 Button 类型*/\n-    buttonType?: buttonType;\n-    children: ReactNode;\n-    href?: string;\n-};\n+interface BaseButtonProps {\n+  className?: string;\n+  /**设置 Button 的禁用 */\n+  disabled?: boolean;\n+  /**设置 Button 的尺寸 */\n+  size?: ButtonSize;\n+  /**设置 Button 的类型 */\n+  btnType?: ButtonType;\n+  children: React.ReactNode;\n+  href?: string;\n+}\n \n-// 扩展按钮属性，如 onClick...\n-// & ： typeScript 中联合类型，表示两种类型都要。 | 或：两个取其中一个\n-// Partial<> : typeScript 中提供，把属性变成可选的\n type NativeButtonProps = BaseButtonProps & ButtonHTMLAttributes<HTMLElement>\n type AnchorButtonProps = BaseButtonProps & AnchorHTMLAttributes<HTMLElement>\n-type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n-\n+export type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n /**\n- * 这是我们的一个Button组件\n+ * 页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\n+ * ~~~\n  */\n export const Button: FC<ButtonProps> = (props) => {\n-    const {\n-        className,\n-        disabled,\n-        buttonSize,\n-        buttonType,\n-        children,\n-        href,\n-        ...restProps\n-    } = props;\n+  const { btnType, disabled, size, children, className, href, ...restProps } = props\n+  // btn, btn-lg, btn-primary\n+  const classes = classNames('btn', className, {\n+    [`btn-${btnType}`]: btnType,\n+    [`btn-${size}`]: size,\n+    'disabled': (btnType === 'link') && disabled\n+  })\n \n-    const classes = classNames('btn', {\n-        [`btn-${buttonType}`]: !!buttonType,\n-        [`btn-${buttonSize}`]: !!buttonSize,\n-        'disabled': (buttonType === 'link') && disabled\n-    }, className);\n-\n-    if (buttonType === 'link' && href) {\n-        return (\n-            <a \n-                className={classes}\n-                href={href}\n-                {...restProps}\n-            >\n-                {children}\n-            </a>\n-        );\n-    }\n-\n+  if (btnType === 'link' && href) {\n     return (\n-        <button \n-            className={classes}\n-            disabled={disabled}\n-            {...restProps}\n-        >\n-            {children}\n-        </button>\n-    );\n-};\n+      <a\n+        className={classes}\n+        href={href}\n+        {...restProps}\n+      >\n+        {children}\n+      </a>\n+    )\n+  } else {\n+    return (\n+      <button\n+        className={classes}\n+        disabled={disabled}\n+        {...restProps}\n+      >\n+        {children}\n+      </button>\n+    )\n+  }\n+}\n \n-// 默认属性\n Button.defaultProps = {\n-    disabled: false,\n-    buttonType: 'default',\n-    buttonSize: 'lg',\n-};\n+  disabled: false,\n+  btnType: 'default'\n+}\n \n export default Button;\n"
                },
                {
                    "date": 1663662164841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 16:09:39\n+ * @LastEditTime: 2022-09-20 16:22:44\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n import classNames from 'classnames'\n \n@@ -75,8 +75,9 @@\n }\n \n Button.defaultProps = {\n   disabled: false,\n-  btnType: 'default'\n+  buttonType: 'default',\n+  buttonSize: 'lg',\n }\n \n export default Button;\n"
                },
                {
                    "date": 1663662454316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,11 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 16:22:44\n+ * @LastEditTime: 2022-09-20 16:27:33\n  */\n-import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\n+import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes,ReactNode} from 'react'\n import classNames from 'classnames'\n \n export type ButtonSize = 'lg' | 'sm'\n export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n@@ -24,17 +24,17 @@\n // }\n \n interface BaseButtonProps {\n   className?: string;\n-  /**设置 Button 的禁用 */\n+  /**设置 Button 是否禁用*/\n   disabled?: boolean;\n-  /**设置 Button 的尺寸 */\n-  size?: ButtonSize;\n-  /**设置 Button 的类型 */\n-  btnType?: ButtonType;\n-  children: React.ReactNode;\n+  /**设置 Button 大小*/\n+  buttonSize?: ButtonSize;\n+  /**设置 Button 类型*/\n+  buttonType?: ButtonType;\n+  children: ReactNode;\n   href?: string;\n-}\n+};\n \n type NativeButtonProps = BaseButtonProps & ButtonHTMLAttributes<HTMLElement>\n type AnchorButtonProps = BaseButtonProps & AnchorHTMLAttributes<HTMLElement>\n export type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n@@ -42,17 +42,17 @@\n  * 页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\n  * ~~~\n  */\n export const Button: FC<ButtonProps> = (props) => {\n-  const { btnType, disabled, size, children, className, href, ...restProps } = props\n+  const { buttonType, disabled, buttonSize, children, className, href, ...restProps } = props\n   // btn, btn-lg, btn-primary\n   const classes = classNames('btn', className, {\n-    [`btn-${btnType}`]: btnType,\n-    [`btn-${size}`]: size,\n-    'disabled': (btnType === 'link') && disabled\n+    [`btn-${buttonType}`]: buttonType,\n+    [`btn-${buttonSize}`]: buttonSize,\n+    'disabled': (buttonType === 'link') && disabled\n   })\n \n-  if (btnType === 'link' && href) {\n+  if (buttonType === 'link' && href) {\n     return (\n       <a\n         className={classes}\n         href={href}\n"
                },
                {
                    "date": 1663662560068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \n  * @Author: kiko\n  * @Date: 2022-09-09 08:59:57\n  * @LastEditors: kiko\n- * @LastEditTime: 2022-09-20 16:27:33\n+ * @LastEditTime: 2022-09-20 16:29:19\n  */\n import React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes,ReactNode} from 'react'\n import classNames from 'classnames'\n \n@@ -45,10 +45,10 @@\n export const Button: FC<ButtonProps> = (props) => {\n   const { buttonType, disabled, buttonSize, children, className, href, ...restProps } = props\n   // btn, btn-lg, btn-primary\n   const classes = classNames('btn', className, {\n-    [`btn-${buttonType}`]: buttonType,\n-    [`btn-${buttonSize}`]: buttonSize,\n+    [`btn-${buttonType}`]: !!buttonType,\n+    [`btn-${buttonSize}`]: !!buttonSize,\n     'disabled': (buttonType === 'link') && disabled\n   })\n \n   if (buttonType === 'link' && href) {\n"
                }
            ],
            "date": 1663656047418,
            "name": "Commit-0",
            "content": "/*\n * @Descripttion: \n * @version: \n * @Author: kiko\n * @Date: 2022-09-09 08:59:57\n * @LastEditors: kiko\n * @LastEditTime: 2022-09-20 14:40:47\n */\nimport React, { FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react'\nimport classNames from 'classnames'\n\nexport type ButtonSize  = 'lg' | 'sm'\nexport type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n// export enum ButtonSize {\n//   Large = 'lg',\n//   Small = 'sm'\n// }\n\n// export enum ButtonType {\n//   Primary = 'primary',\n//   Default = 'default',\n//   Danger = 'danger',\n//   Link = 'link',\n// }\n\ninterface BaseButtonProps {\n  className?: string;\n  /**设置 Button 的禁用 */\n  disabled?: boolean;\n  /**设置 Button 的尺寸 */\n  size?: ButtonSize;\n  /**设置 Button 的类型 */\n  btnType?: ButtonType;\n  children: React.ReactNode;\n  href?: string;\n}\n\ntype NativeButtonProps = BaseButtonProps & ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n/**\n * 页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\n * ### 引用方法\n *\n * ~~~js\n * import { Button } from 'vikingship-ui'\n * ~~~\n */\nexport const Button: FC<ButtonProps> = (props) => {\n  const { btnType, disabled, size, children, className, href, ...restProps } = props\n  // btn, btn-lg, btn-primary\n  const classes = classNames('btn', className, {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    'disabled': (btnType === 'link') && disabled\n  })\n\n  if (btnType === 'link' && href) {\n    return (\n      <a\n        className={classes}\n        href={href}\n        {...restProps}\n      >\n        {children}\n      </a>\n    )\n  } else {\n    return (\n      <button\n        className={classes}\n        disabled={disabled}\n        {...restProps}\n      >\n        {children}\n      </button>\n    )\n  }\n}\n\nButton.defaultProps = {\n  disabled: false,\n  btnType: 'default'\n}\n\nexport default Button;\n"
        }
    ]
}